# Use the official Python 3.10 slim image based on Debian Bullseye
FROM python:3.10-slim-bullseye

# Set the working directory in the container
WORKDIR /app

# Set environment variables to prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONFAULTHANDLER=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONIOENCODING=UTF-8 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100

#
# --- START OF FIX ---
#
# Install system dependencies
# This is the corrected block
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Add essentials
    build-essential \
    curl \
    # Add dependencies for libGL and other libraries
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    # Clean up
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
#
# --- END OF FIX ---
#

# Copy the requirements file into the container
COPY pyproject.toml poetry.lock* ./

# Install poetry
RUN pip install poetry

# Install project dependencies
# --no-root is important to only install dependencies
RUN poetry config virtualenvs.create false \
    && poetry install --no-dev --no-root --no-interaction

# Copy the entire project source code into the container
COPY . .

# Expose the port the app runs on
EXPOSE 8080

# The command to run the application
CMD ["python", "distributed_server.py", "--host", "0.0.0.0", "--port", "8080"]
